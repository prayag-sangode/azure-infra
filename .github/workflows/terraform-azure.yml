name: Terraform Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Deploy Terraform Resources
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # Configure Azure Authentication and Export Variables
      - name: Authenticate to Azure
        run: |
          echo "Setting up Azure credentials..."
          export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}
          export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
        run: terraform plan

      # Ask whether to apply or destroy
      - name: Ask Terraform Action (apply or destroy)
        id: ask_action
        run: |
          echo "Please choose an action:"
          echo "Enter 'apply' to apply the Terraform plan or 'destroy' to destroy the resources"
          read action_choice
          echo "::set-output name=action_choice::$action_choice"

      # Terraform Apply or Destroy based on input
      - name: Terraform Action
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
        run: |
          if [[ "${{ steps.ask_action.outputs.action_choice }}" == "apply" ]]; then
            terraform apply --auto-approve
          elif [[ "${{ steps.ask_action.outputs.action_choice }}" == "destroy" ]]; then
            terraform destroy --auto-approve
          else
            echo "Invalid action choice. Please enter 'apply' or 'destroy'."
            exit 1
          fi
